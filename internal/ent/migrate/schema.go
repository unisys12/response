// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DeathCertificatesColumns holds the columns for the "death_certificates" table.
	DeathCertificatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "cause", Type: field.TypeString},
		{Name: "comments", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "certified_at", Type: field.TypeTime, Nullable: true},
		{Name: "certifier_comments", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "requires_certification", Type: field.TypeBool, Default: false},
		{Name: "death_certificate_metadata", Type: field.TypeInt, Nullable: true},
		{Name: "death_certifier_death_certificates", Type: field.TypeInt, Nullable: true},
		{Name: "death_manner_death_certificates", Type: field.TypeInt, Nullable: true},
		{Name: "death_place_death_certificates", Type: field.TypeInt, Nullable: true},
		{Name: "person_death_certificate", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "person_certified_deaths", Type: field.TypeInt, Nullable: true},
	}
	// DeathCertificatesTable holds the schema information for the "death_certificates" table.
	DeathCertificatesTable = &schema.Table{
		Name:       "death_certificates",
		Columns:    DeathCertificatesColumns,
		PrimaryKey: []*schema.Column{DeathCertificatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "death_certificates_metadata_metadata",
				Columns:    []*schema.Column{DeathCertificatesColumns[12]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "death_certificates_death_certifiers_death_certificates",
				Columns:    []*schema.Column{DeathCertificatesColumns[13]},
				RefColumns: []*schema.Column{DeathCertifiersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "death_certificates_death_manners_death_certificates",
				Columns:    []*schema.Column{DeathCertificatesColumns[14]},
				RefColumns: []*schema.Column{DeathMannersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "death_certificates_death_places_death_certificates",
				Columns:    []*schema.Column{DeathCertificatesColumns[15]},
				RefColumns: []*schema.Column{DeathPlacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "death_certificates_persons_death_certificate",
				Columns:    []*schema.Column{DeathCertificatesColumns[16]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "death_certificates_persons_certified_deaths",
				Columns:    []*schema.Column{DeathCertificatesColumns[17]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeathCertifiersColumns holds the columns for the "death_certifiers" table.
	DeathCertifiersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "death_certifier_metadata", Type: field.TypeInt, Nullable: true},
	}
	// DeathCertifiersTable holds the schema information for the "death_certifiers" table.
	DeathCertifiersTable = &schema.Table{
		Name:       "death_certifiers",
		Columns:    DeathCertifiersColumns,
		PrimaryKey: []*schema.Column{DeathCertifiersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "death_certifiers_metadata_metadata",
				Columns:    []*schema.Column{DeathCertifiersColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeathMannersColumns holds the columns for the "death_manners" table.
	DeathMannersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "death_manner_metadata", Type: field.TypeInt, Nullable: true},
	}
	// DeathMannersTable holds the schema information for the "death_manners" table.
	DeathMannersTable = &schema.Table{
		Name:       "death_manners",
		Columns:    DeathMannersColumns,
		PrimaryKey: []*schema.Column{DeathMannersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "death_manners_metadata_metadata",
				Columns:    []*schema.Column{DeathMannersColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeathPlacesColumns holds the columns for the "death_places" table.
	DeathPlacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "death_place_metadata", Type: field.TypeInt, Nullable: true},
	}
	// DeathPlacesTable holds the schema information for the "death_places" table.
	DeathPlacesTable = &schema.Table{
		Name:       "death_places",
		Columns:    DeathPlacesColumns,
		PrimaryKey: []*schema.Column{DeathPlacesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "death_places_metadata_metadata",
				Columns:    []*schema.Column{DeathPlacesColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EthnicitiesColumns holds the columns for the "ethnicities" table.
	EthnicitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "ethnicity_metadata", Type: field.TypeInt, Nullable: true},
	}
	// EthnicitiesTable holds the schema information for the "ethnicities" table.
	EthnicitiesTable = &schema.Table{
		Name:       "ethnicities",
		Columns:    EthnicitiesColumns,
		PrimaryKey: []*schema.Column{EthnicitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ethnicities_metadata_metadata",
				Columns:    []*schema.Column{EthnicitiesColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GameServersColumns holds the columns for the "game_servers" table.
	GameServersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "secret", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString},
		{Name: "monitoring", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disabled_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_contact_at", Type: field.TypeTime, Nullable: true},
		{Name: "game_server_metadata", Type: field.TypeInt, Nullable: true},
	}
	// GameServersTable holds the schema information for the "game_servers" table.
	GameServersTable = &schema.Table{
		Name:       "game_servers",
		Columns:    GameServersColumns,
		PrimaryKey: []*schema.Column{GameServersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_servers_metadata_metadata",
				Columns:    []*schema.Column{GameServersColumns[14]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MetadataColumns holds the columns for the "metadata" table.
	MetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "data", Type: field.TypeJSON},
	}
	// MetadataTable holds the schema information for the "metadata" table.
	MetadataTable = &schema.Table{
		Name:       "metadata",
		Columns:    MetadataColumns,
		PrimaryKey: []*schema.Column{MetadataColumns[0]},
	}
	// OauthConnectionsColumns holds the columns for the "oauth_connections" table.
	OauthConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "provider", Type: field.TypeString},
		{Name: "provider_user_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "user_oauth_connections", Type: field.TypeInt, Nullable: true},
	}
	// OauthConnectionsTable holds the schema information for the "oauth_connections" table.
	OauthConnectionsTable = &schema.Table{
		Name:       "oauth_connections",
		Columns:    OauthConnectionsColumns,
		PrimaryKey: []*schema.Column{OauthConnectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_connections_users_oauth_connections",
				Columns:    []*schema.Column{OauthConnectionsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PersonsColumns holds the columns for the "persons" table.
	PersonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "middle_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "suffix", Type: field.TypeString, Nullable: true},
		{Name: "date_of_birth", Type: field.TypeTime, Nullable: true},
		{Name: "birthplace", Type: field.TypeString, Nullable: true},
		{Name: "deceased_at", Type: field.TypeTime, Nullable: true},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "ethnicity_people", Type: field.TypeInt, Nullable: true},
		{Name: "person_metadata", Type: field.TypeInt, Nullable: true},
		{Name: "race_people", Type: field.TypeInt, Nullable: true},
		{Name: "sex_people", Type: field.TypeInt, Nullable: true},
		{Name: "user_people", Type: field.TypeInt, Nullable: true},
	}
	// PersonsTable holds the schema information for the "persons" table.
	PersonsTable = &schema.Table{
		Name:       "persons",
		Columns:    PersonsColumns,
		PrimaryKey: []*schema.Column{PersonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "persons_ethnicities_people",
				Columns:    []*schema.Column{PersonsColumns[15]},
				RefColumns: []*schema.Column{EthnicitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_metadata_metadata",
				Columns:    []*schema.Column{PersonsColumns[16]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_races_people",
				Columns:    []*schema.Column{PersonsColumns[17]},
				RefColumns: []*schema.Column{RacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_sexes_people",
				Columns:    []*schema.Column{PersonsColumns[18]},
				RefColumns: []*schema.Column{SexesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_users_people",
				Columns:    []*schema.Column{PersonsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayersColumns holds the columns for the "players" table.
	PlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "player_metadata", Type: field.TypeInt, Nullable: true},
	}
	// PlayersTable holds the schema information for the "players" table.
	PlayersTable = &schema.Table{
		Name:       "players",
		Columns:    PlayersColumns,
		PrimaryKey: []*schema.Column{PlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "players_metadata_metadata",
				Columns:    []*schema.Column{PlayersColumns[8]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayerIdentifiersColumns holds the columns for the "player_identifiers" table.
	PlayerIdentifiersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "value", Type: field.TypeString, Unique: true},
		{Name: "player_identifiers", Type: field.TypeInt, Nullable: true},
	}
	// PlayerIdentifiersTable holds the schema information for the "player_identifiers" table.
	PlayerIdentifiersTable = &schema.Table{
		Name:       "player_identifiers",
		Columns:    PlayerIdentifiersColumns,
		PrimaryKey: []*schema.Column{PlayerIdentifiersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_identifiers_players_identifiers",
				Columns:    []*schema.Column{PlayerIdentifiersColumns[8]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RacesColumns holds the columns for the "races" table.
	RacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
	}
	// RacesTable holds the schema information for the "races" table.
	RacesTable = &schema.Table{
		Name:       "races",
		Columns:    RacesColumns,
		PrimaryKey: []*schema.Column{RacesColumns[0]},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "started_from", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "ended_at", Type: field.TypeTime},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// SexesColumns holds the columns for the "sexes" table.
	SexesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "sex_metadata", Type: field.TypeInt, Nullable: true},
	}
	// SexesTable holds the schema information for the "sexes" table.
	SexesTable = &schema.Table{
		Name:       "sexes",
		Columns:    SexesColumns,
		PrimaryKey: []*schema.Column{SexesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sexes_metadata_metadata",
				Columns:    []*schema.Column{SexesColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatesColumns holds the columns for the "states" table.
	StatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
	}
	// StatesTable holds the schema information for the "states" table.
	StatesTable = &schema.Table{
		Name:       "states",
		Columns:    StatesColumns,
		PrimaryKey: []*schema.Column{StatesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "permissions", Type: field.TypeJSON, Nullable: true},
		{Name: "first_setup_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_metadata", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_metadata_metadata",
				Columns:    []*schema.Column{UsersColumns[13]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VehiclesColumns holds the columns for the "vehicles" table.
	VehiclesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "vin", Type: field.TypeString, Nullable: true},
		{Name: "style", Type: field.TypeString, Nullable: true},
		{Name: "extra_features", Type: field.TypeTime, Nullable: true},
		{Name: "private_notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "vehicle_metadata", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_class_vehicles", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_color_vehicles_major", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_color_vehicles_minor", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_make_vehicles", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_model_vehicles", Type: field.TypeInt, Nullable: true},
	}
	// VehiclesTable holds the schema information for the "vehicles" table.
	VehiclesTable = &schema.Table{
		Name:       "vehicles",
		Columns:    VehiclesColumns,
		PrimaryKey: []*schema.Column{VehiclesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicles_metadata_metadata",
				Columns:    []*schema.Column{VehiclesColumns[11]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicles_vehicle_classes_vehicles",
				Columns:    []*schema.Column{VehiclesColumns[12]},
				RefColumns: []*schema.Column{VehicleClassesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicles_vehicle_colors_vehicles_major",
				Columns:    []*schema.Column{VehiclesColumns[13]},
				RefColumns: []*schema.Column{VehicleColorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicles_vehicle_colors_vehicles_minor",
				Columns:    []*schema.Column{VehiclesColumns[14]},
				RefColumns: []*schema.Column{VehicleColorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicles_vehicle_makes_vehicles",
				Columns:    []*schema.Column{VehiclesColumns[15]},
				RefColumns: []*schema.Column{VehicleMakesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicles_vehicle_models_vehicles",
				Columns:    []*schema.Column{VehiclesColumns[16]},
				RefColumns: []*schema.Column{VehicleModelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VehicleClassesColumns holds the columns for the "vehicle_classes" table.
	VehicleClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "vehicle_class_metadata", Type: field.TypeInt, Nullable: true},
	}
	// VehicleClassesTable holds the schema information for the "vehicle_classes" table.
	VehicleClassesTable = &schema.Table{
		Name:       "vehicle_classes",
		Columns:    VehicleClassesColumns,
		PrimaryKey: []*schema.Column{VehicleClassesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicle_classes_metadata_metadata",
				Columns:    []*schema.Column{VehicleClassesColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VehicleColorsColumns holds the columns for the "vehicle_colors" table.
	VehicleColorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "vehicle_color_metadata", Type: field.TypeInt, Nullable: true},
	}
	// VehicleColorsTable holds the schema information for the "vehicle_colors" table.
	VehicleColorsTable = &schema.Table{
		Name:       "vehicle_colors",
		Columns:    VehicleColorsColumns,
		PrimaryKey: []*schema.Column{VehicleColorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicle_colors_metadata_metadata",
				Columns:    []*schema.Column{VehicleColorsColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VehicleMakesColumns holds the columns for the "vehicle_makes" table.
	VehicleMakesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
	}
	// VehicleMakesTable holds the schema information for the "vehicle_makes" table.
	VehicleMakesTable = &schema.Table{
		Name:       "vehicle_makes",
		Columns:    VehicleMakesColumns,
		PrimaryKey: []*schema.Column{VehicleMakesColumns[0]},
	}
	// VehicleModelsColumns holds the columns for the "vehicle_models" table.
	VehicleModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "short", Type: field.TypeString, Size: 5},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 160},
		{Name: "vehicle_model_metadata", Type: field.TypeInt, Nullable: true},
	}
	// VehicleModelsTable holds the schema information for the "vehicle_models" table.
	VehicleModelsTable = &schema.Table{
		Name:       "vehicle_models",
		Columns:    VehicleModelsColumns,
		PrimaryKey: []*schema.Column{VehicleModelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicle_models_metadata_metadata",
				Columns:    []*schema.Column{VehicleModelsColumns[10]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VehicleRegistrationsColumns holds the columns for the "vehicle_registrations" table.
	VehicleRegistrationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "created_with", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_with", Type: field.TypeString, Nullable: true},
		{Name: "plate", Type: field.TypeString},
		{Name: "expired_at", Type: field.TypeTime},
		{Name: "person_vehicle_registrations", Type: field.TypeInt, Nullable: true},
		{Name: "state_vehicle_registrations", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_registrations", Type: field.TypeInt, Nullable: true},
		{Name: "vehicle_registration_metadata", Type: field.TypeInt, Nullable: true},
	}
	// VehicleRegistrationsTable holds the schema information for the "vehicle_registrations" table.
	VehicleRegistrationsTable = &schema.Table{
		Name:       "vehicle_registrations",
		Columns:    VehicleRegistrationsColumns,
		PrimaryKey: []*schema.Column{VehicleRegistrationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vehicle_registrations_persons_vehicle_registrations",
				Columns:    []*schema.Column{VehicleRegistrationsColumns[9]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicle_registrations_states_vehicle_registrations",
				Columns:    []*schema.Column{VehicleRegistrationsColumns[10]},
				RefColumns: []*schema.Column{StatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicle_registrations_vehicles_registrations",
				Columns:    []*schema.Column{VehicleRegistrationsColumns[11]},
				RefColumns: []*schema.Column{VehiclesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "vehicle_registrations_metadata_metadata",
				Columns:    []*schema.Column{VehicleRegistrationsColumns[12]},
				RefColumns: []*schema.Column{MetadataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayerServersColumns holds the columns for the "player_servers" table.
	PlayerServersColumns = []*schema.Column{
		{Name: "player_id", Type: field.TypeInt},
		{Name: "game_server_id", Type: field.TypeInt},
	}
	// PlayerServersTable holds the schema information for the "player_servers" table.
	PlayerServersTable = &schema.Table{
		Name:       "player_servers",
		Columns:    PlayerServersColumns,
		PrimaryKey: []*schema.Column{PlayerServersColumns[0], PlayerServersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_servers_player_id",
				Columns:    []*schema.Column{PlayerServersColumns[0]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_servers_game_server_id",
				Columns:    []*schema.Column{PlayerServersColumns[1]},
				RefColumns: []*schema.Column{GameServersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DeathCertificatesTable,
		DeathCertifiersTable,
		DeathMannersTable,
		DeathPlacesTable,
		EthnicitiesTable,
		GameServersTable,
		MetadataTable,
		OauthConnectionsTable,
		PersonsTable,
		PlayersTable,
		PlayerIdentifiersTable,
		RacesTable,
		SessionsTable,
		SettingsTable,
		SexesTable,
		StatesTable,
		UsersTable,
		VehiclesTable,
		VehicleClassesTable,
		VehicleColorsTable,
		VehicleMakesTable,
		VehicleModelsTable,
		VehicleRegistrationsTable,
		PlayerServersTable,
	}
)

func init() {
	DeathCertificatesTable.ForeignKeys[0].RefTable = MetadataTable
	DeathCertificatesTable.ForeignKeys[1].RefTable = DeathCertifiersTable
	DeathCertificatesTable.ForeignKeys[2].RefTable = DeathMannersTable
	DeathCertificatesTable.ForeignKeys[3].RefTable = DeathPlacesTable
	DeathCertificatesTable.ForeignKeys[4].RefTable = PersonsTable
	DeathCertificatesTable.ForeignKeys[5].RefTable = PersonsTable
	DeathCertifiersTable.ForeignKeys[0].RefTable = MetadataTable
	DeathMannersTable.ForeignKeys[0].RefTable = MetadataTable
	DeathPlacesTable.ForeignKeys[0].RefTable = MetadataTable
	EthnicitiesTable.ForeignKeys[0].RefTable = MetadataTable
	GameServersTable.ForeignKeys[0].RefTable = MetadataTable
	OauthConnectionsTable.ForeignKeys[0].RefTable = UsersTable
	OauthConnectionsTable.Annotation = &entsql.Annotation{
		Table: "oauth_connections",
	}
	PersonsTable.ForeignKeys[0].RefTable = EthnicitiesTable
	PersonsTable.ForeignKeys[1].RefTable = MetadataTable
	PersonsTable.ForeignKeys[2].RefTable = RacesTable
	PersonsTable.ForeignKeys[3].RefTable = SexesTable
	PersonsTable.ForeignKeys[4].RefTable = UsersTable
	PlayersTable.ForeignKeys[0].RefTable = MetadataTable
	PlayerIdentifiersTable.ForeignKeys[0].RefTable = PlayersTable
	SexesTable.ForeignKeys[0].RefTable = MetadataTable
	UsersTable.ForeignKeys[0].RefTable = MetadataTable
	VehiclesTable.ForeignKeys[0].RefTable = MetadataTable
	VehiclesTable.ForeignKeys[1].RefTable = VehicleClassesTable
	VehiclesTable.ForeignKeys[2].RefTable = VehicleColorsTable
	VehiclesTable.ForeignKeys[3].RefTable = VehicleColorsTable
	VehiclesTable.ForeignKeys[4].RefTable = VehicleMakesTable
	VehiclesTable.ForeignKeys[5].RefTable = VehicleModelsTable
	VehicleClassesTable.ForeignKeys[0].RefTable = MetadataTable
	VehicleColorsTable.ForeignKeys[0].RefTable = MetadataTable
	VehicleModelsTable.ForeignKeys[0].RefTable = MetadataTable
	VehicleRegistrationsTable.ForeignKeys[0].RefTable = PersonsTable
	VehicleRegistrationsTable.ForeignKeys[1].RefTable = StatesTable
	VehicleRegistrationsTable.ForeignKeys[2].RefTable = VehiclesTable
	VehicleRegistrationsTable.ForeignKeys[3].RefTable = MetadataTable
	PlayerServersTable.ForeignKeys[0].RefTable = PlayersTable
	PlayerServersTable.ForeignKeys[1].RefTable = GameServersTable
}
